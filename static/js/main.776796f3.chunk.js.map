{"version":3,"sources":["Components/input.js","Components/Contents.js","Components/Mask.js","Components/Locas.js","GlobalStyles.js","App.js","index.js"],"names":["Gnb","styled","div","Searchform","SearchInput","onSearch","useState","value","setValue","className","type","onChange","e","target","onKeyDown","keyCode","Content","Light","StoreName","p","RemainStat","span","Contents","shop","addr","name","remain_stat","remainSwitch","color","setColor","text","style","background","getMask","y","x","setStores","a","axios","get","response","stores","data","store","map","lat","lng","Mapwrap","Maps","setMap","setError","pharmacy","setPharmacy","useCallback","marker","kakao","maps","Marker","position","LatLng","clickable","overlay","CustomOverlay","content","ReactDOMServer","renderToStaticMarkup","getPosition","event","addListener","useEffect","container","document","getElementById","options","center","level","Map","keyword","services","Places","keywordSearch","result","status","Status","OK","firstItem","console","log","moveLatLng","panTo","ZERO_RESULT","id","globalStyles","createGlobalStyle","reset","MapWrapper","App","GlobalStyles","ReactDOM","render"],"mappings":"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","file":"static/js/main.776796f3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\n\r\n\r\nconst Gnb = styled.div `\r\n \r\n    position: absolute;\r\n    right: 0;\r\n    bottom:0;\r\n    z-index:20;\r\n    background-color: #e5dbff;\r\n    width: 100vw;\r\n    height: 20vh;\r\n    color: #fff;\r\n\r\n    .Gnb_inner{\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        \r\n    }\r\n    \r\n`\r\n\r\n\r\nconst Searchform = styled.div `\r\n\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%,-40%);\r\n    color: #5f3dc4;\r\n    \r\n   .inputSearch {\r\n        outline: none;\r\n        width: 30vw;\r\n        line-height: 32px;\r\n        background-color: #f3f0ff;\r\n        border: none;\r\n        border-radius: 8px;\r\n        text-indent: 5px;\r\n    }  \r\n    \r\n    button {\r\n        position: absolute;\r\n        top:0;\r\n        right: 0;\r\n        padding: 0 8px;\r\n        line-height: 32px;\r\n        font-size: 16px;\r\n        background: #b39ddb;\r\n        border:none;\r\n        cursor: pointer;\r\n        border-radius: 0 8px 8px 0;\r\n    }\r\n\r\n    svg{\r\n        vertical-align: middle;\r\n    }\r\n    \r\n`\r\n\r\n// const CircleBtn = styled.button `\r\n\r\n//     background: #845ef7;\r\n//     &:hover{\r\n//         background: #63e6be;\r\n//     }\r\n//     &:active{\r\n//         background: #20c997;\r\n//     }\r\n//     z-index: 5;\r\n//     cursor: pointer;\r\n//     width: 50px;\r\n//     height: 50px;\r\n//     position: absolute;\r\n//     right: 0;\r\n//     top: 0;\r\n//     font-size:60px;\r\n//     color : #fff;\r\n//     border-radius: 40px;\r\n//     border: none; \r\n//     outline: none;\r\n//     transition: all .125s ease-in;\r\n\r\n// `\r\n\r\n\r\n\r\n\r\nfunction SearchInput({onSearch}){\r\n\r\n    const [value, setValue] = useState('');\r\n    const [ open, setOpen ] = useState(false)\r\n    \r\n    const onChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (e) =>{\r\n        if(e.keyCode === 13){\r\n            onSearch(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    const gnbClose = () => setOpen(!open)\r\n\r\n    return(\r\n        \r\n            <Gnb>   \r\n                <div className='Gnb_inner'> \r\n                    <Searchform> \r\n                        <input \r\n                            type='search'\r\n                            className='inputSearch'  \r\n                            value={value} \r\n                            onChange={onChange} \r\n                            onKeyDown={onSubmit}\r\n                        />\r\n                        <button>\r\n                            <AiOutlineSearch/>\r\n                        </button>\r\n                    </Searchform>   \r\n                </div>\r\n            </Gnb>\r\n       \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default SearchInput","import React,{ useState } from 'react'\r\nimport styled, { css } from 'styled-components';\r\n\r\n\r\nconst Content = styled.div `\r\n\r\n  position: absolute;\r\n  top:0;\r\n  left:-100px;\r\n  z-index:9999;\r\n  padding: 15px;\r\n  background: #7e57c2;\r\n  color: #ede7f6;\r\n  border-radius: 8px;\r\n  line-height: 1.6;\r\n`\r\n\r\nconst Light = styled.div `\r\n\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 15px;\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n`\r\n\r\nconst StoreName = styled.p `\r\n\r\n      padding: 15px 0 10px;\r\n      font-size: 12px;\r\n      display: inline-block;\r\n      width: 250px;\r\n      overflow: hidden;\r\n      white-space: normal;\r\n      text-overflow: ellipsis;\r\n`\r\n\r\nconst RemainStat = styled.span`\r\n  display: block;\r\n  font-size: 12px;\r\n\r\n`\r\n\r\n\r\nconst Contents = (shop) => {\r\n\r\n  const { addr, name, remain_stat } = shop.shop;\r\n  const { color, setColor } = useState('')\r\n\r\n  const remainSwitch = value =>{\r\n\r\n    let  color, text\r\n    \r\n      switch(value){\r\n        case 'plenty':\r\n          color = \"green\";\r\n          text = \"100개 이상\"\r\n          return {color, text}\r\n\r\n        case 'some':\r\n          color = \"yellow\";\r\n          text = \"30~100개\"\r\n          return {color, text}\r\n          \r\n        case 'few':\r\n          color = \"red\";\r\n          text = \"2~30개\"\r\n        return {color, text}  \r\n        \r\n        default :\r\n          color = \"gray\";\r\n          text = \"판매중지\"\r\n          return { color, text }\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Content>\r\n        <h3>{name}</h3>\r\n        <Light style={{\r\n          background:remainSwitch(remain_stat).color\r\n        }}/>\r\n        <StoreName>{addr}</StoreName>\r\n        <RemainStat>\r\n          {\r\n            remainSwitch(remain_stat).text\r\n          }\r\n        </RemainStat>\r\n    </Content>\r\n  )\r\n}\r\n\r\nexport default Contents\r\n","import axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nexport async function getMask(y, x, setStores) {\r\n   \r\n    const response = await axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${y}&lng=${x}&m=1000`\r\n      // `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?`\r\n      \r\n    );\r\n    const stores = response.data.stores\r\n    const store = stores.map(store=>{\r\n      const { addr, name, lat, lng, remain_stat } = store\r\n      return { addr, name, lat, lng, remain_stat }\r\n    })\r\n    return setStores(store)\r\n}\r\n\r\n  \r\n","import React,{ useState, useEffect, useCallback } from 'react'/*global kakao*/ ;\r\nimport styled from 'styled-components';\r\nimport SearchInput from './input.js'\r\nimport Contents from './Contents.js'\r\nimport{ getMask } from './Mask.js';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nconst Mapwrap = styled.div `\r\n    #map{\r\n      width: 100vw;\r\n      height: 100vh;\r\n    }\r\n\r\n`\r\n\r\n\r\n\r\nconst Maps = () =>{\r\n  \r\n  const [ map, setMap ] = useState(null);\r\n  const [ error, setError ] = useState('');\r\n  const [ pharmacy, setPharmacy] = useState({\r\n    data:[]\r\n  });\r\n  \r\n\r\n\r\n  const setStores = useCallback(data => {\r\n    \r\n    setPharmacy({\r\n      ...pharmacy,\r\n      data,\r\n    })\r\n    \r\n  },[pharmacy])\r\n  \r\n \r\n  const setMarker = () =>{\r\n    const { data } = pharmacy\r\n    \r\n      data.map(shop=>{\r\n        const { lat, lng, } = shop;\r\n\r\n        const marker = new kakao.maps.Marker({\r\n          map,   \r\n          position: new kakao.maps.LatLng(lat, lng),\r\n          clickable: true\r\n        })\r\n        \r\n        \r\n        const overlay = new kakao.maps.CustomOverlay({\r\n          content:ReactDOMServer.renderToStaticMarkup(\r\n           <Contents shop={shop}  />),\r\n          map,\r\n          position: marker.getPosition(),\r\n        })\r\n\r\n        overlay.setMap(null)\r\n        \r\n        kakao.maps.event.addListener(marker, 'mouseover', function () {\r\n          overlay.setMap(map)\r\n        });\r\n       kakao.maps.event.addListener(marker, 'mouseout', function () {\r\n         overlay.setMap(null)\r\n       })\r\n        \r\n      })  \r\n      \r\n  }\r\n  setMarker()\r\n  \r\n  const searchPlace = keyword => {\r\n      const places = new kakao.maps.services.Places()\r\n      places.keywordSearch(keyword, (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          const firstItem = result[0]\r\n          const { x, y } = firstItem\r\n          console.log(x,y)\r\n          const moveLatLng = new kakao.maps.LatLng(y, x);\r\n          map.panTo(moveLatLng)\r\n          getMask(y, x, setStores)\r\n        } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n          setError(\"검색 결과가 없습니다.\")\r\n        } else {\r\n          setError(\"다시 시도해주세요.\")\r\n        }\r\n      })\r\n    }\r\n    \r\n  const SeachShow = value => {\r\n    if (value) {\r\n      searchPlace(value)\r\n    }\r\n  }\r\n \r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"map\")\r\n    const options = {\r\n      center: new kakao.maps.LatLng(37.6646316280323, 127.065922449004),\r\n      level: 2\r\n    }\r\n     \r\n    const map = new kakao.maps.Map(container, options)\r\n    setMap(map)\r\n    getMask(37.6646316280323, 127.065922449004, setStores)\r\n    \r\n  }, [])\r\n\r\n\r\n  return (\r\n      <Mapwrap>\r\n        <SearchInput onSearch={SeachShow}/>\r\n        <div id=\"map\" >\r\n        \r\n        </div>\r\n      </Mapwrap>\r\n  )\r\n}\r\nexport default Maps"," import { createGlobalStyle } from \"styled-components\";\r\n import reset from \"styled-reset\";\r\n\r\n const globalStyles = createGlobalStyle`\r\n     ${reset};\r\n     a{\r\n         text-decoration:none;\r\n         color:inherit;\r\n     }\r\n     *{ \r\n        margin:0;\r\n        padding:0;\r\n        box-sizing:border-box;\r\n     }\r\n     body{\r\n         font-size:16px;\r\n     }\r\n     li{\r\n         list-style:none;\r\n     }\r\n     button{\r\n         outline:none;\r\n     }\r\n `\r\n\r\nexport default globalStyles\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Maps from './Components/Locas';\r\nimport GlobalStyles from \"./GlobalStyles\";\r\n\r\n\r\nconst MapWrapper = styled.div `\r\n  position: relative;\r\n  margin:0;\r\n  padding:0;\r\n  overflow: hidden;\r\n`\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n    <GlobalStyles />\r\n    <MapWrapper>\r\n      <Maps/>     \r\n    </MapWrapper> \r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}